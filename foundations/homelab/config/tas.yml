---
product-name: cf
network-properties:
  network:
    name: ((vsphere_tas_network))
  other_availability_zones:
    - name: pks-az1
  singleton_availability_zone:
    name: pks-az1
product-properties:
  .cloud_controller.allow_app_ssh_access:
    value: "true"
  .cloud_controller.apps_domain:
    value: ((apps_domain))
  .cloud_controller.default_quota_max_number_services:
    value: "1000"
  .cloud_controller.default_quota_memory_limit_mb:
    value: "10240"
  .cloud_controller.system_domain:
    value: ((system_domain))
  .diego_brain.static_ips:
    value: "172.16.3.120,172.16.3.121,172.16.3.122"
  .ha_proxy.skip_cert_verify:
    value: "true"
  .ha_proxy.static_ips:
    value: ""
  .mysql_monitor.recipient_email:
    value: ((mysql_monitor_recipient_email))
  .properties.container_networking_interface_plugin.silk.network_cidr:
    value: 10.255.0.0/16
  .properties.credhub_internal_provider_keys:
    value:
      -
        key:
          secret: ((credhub_key_encryption_password_secret))
        name: key-1
        primary: true
  .properties.gorouter_ssl_ciphers:
    value: "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384"
  .properties.haproxy_forward_tls:
    value: disable
  .properties.haproxy_ssl_ciphers:
    value: "DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384"
  .properties.logger_endpoint_port:
    value: ""
  .properties.networking_poe_ssl_certs:
    value:
      -
        certificate:
          cert_pem: ((networking_poe_ssl_cert.certificate))
          private_key_pem: ((networking_poe_ssl_cert.private_key))
        name: "Certificate 1"
  .properties.push_apps_manager_company_name:
    value: ""
  .properties.route_services:
    value: enable
  .properties.route_services.enable.ignore_ssl_cert_verification:
    value: "true"
  .properties.routing_disable_http:
    value: "false"
  .properties.routing_tls_termination:
    value: load_balancer
  .properties.security_acknowledgement:
    value: X
  .properties.system_blobstore:
    value: internal
  .properties.tcp_routing:
    value: enable
  .properties.tcp_routing.enable.reservable_ports:
    value: "2323"
  .properties.uaa:
    value: internal
  .router.disable_insecure_cookies:
    value: "false"
  .router.frontend_idle_timeout:
    value: "900"
  .router.request_timeout_in_seconds:
    value: "900"
  .router.static_ips:
    value: "172.16.3.100,172.16.3.101,172.16.3.102"
  .tcp_router.static_ips:
    value: "172.16.3.110,172.16.3.111,172.16.3.112"
  .uaa.service_provider_key_credentials:
    value:
      cert_pem: ((service_provider_key.certificate))
      private_key_pem: ((service_provider_key.private_key))
resource-config:
  backup_restore:
    instances: 0
    additional_vm_extensions: []
  blobstore:
    instances: 1
    additional_vm_extensions: []
  compute:
    instances: 2
    additional_vm_extensions: []
  control:
    instances: 1
    additional_vm_extensions: []
    nsxt:
      ns_groups: ["pas-ssh-group"]
      vif_type: null
      lb:
        server_pools:
        - name: pas-ssh-pool
          port: 2222
  database:
    instances: 1
    additional_vm_extensions: []
  ha_proxy:
    instances: 0
    additional_vm_extensions: []
  istio_control:
    instances: 0
    additional_vm_extensions: []
  istio_router:
    instances: 0
    additional_vm_extensions: []
  mysql_monitor:
    instances: 0
    additional_vm_extensions: []
  route_syncer:
    instances: 0
    additional_vm_extensions: []
  router:
    instances: 1
    additional_vm_extensions: []
    nsxt:
      ns_groups: ["pas-web-group"]
      vif_type: null
      lb:
        server_pools:
        - name: pas-web-pool
          port: 443
  tcp_router:
    instances: 1
    additional_vm_extensions: []
    nsxt:
      ns_groups: ["pas-tcp-group"]
      vif_type: null
      lb:
        server_pools:
        - name: pas-tcp-pool
          port: 2323

# Errands here have been disabled
# to facilitate rapid testing of our tooling.
# In your environments, choose which errands to run
# according to your configuration and needs.
errand-config:
  deploy-notifications:
    post-deploy-state: false
  deploy-notifications-ui:
    post-deploy-state: false
  push-usage-service:
    post-deploy-state: false
  push-apps-manager:
    post-deploy-state: false
  deploy-autoscaler:
    post-deploy-state: false
  test-autoscaling:
    post-deploy-state: false
  metric_registrar_smoke_test:
    post-deploy-state: false
  nfsbrokerpush:
    post-deploy-state: false
  smbbrokerpush:
    post-deploy-state: false
  rotate_cc_database_key:
    post-deploy-state: false

